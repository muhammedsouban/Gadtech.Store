<!DOCTYPE html>
<html>

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
</head>

<body>
    <!-- Replace "test" with your own sandbox Business account app client ID -->
    <script
        src="https://www.paypal.com/sdk/js?client-id=AeCiE4b7hlre76ADsbzPqo7oz-ehitBvohRG_NTueMky3JPPRst-17mQcbGic_FkFIt8bzif44fx5dM2&currency=USD"></script>
    <!-- Set up a container element for the button -->

    {{!-- <div style="height: 80px;background-color:#282828">


        <img style="height: 70px;padding:10px" src="/Users/images/logo/logo_white.png" alt="">
    </div> --}}
    <section  style="background-color: #ECECEChe;ight: max-content;margin-top: 100px;">
        
        <div class=" d-flex align-items-center">
            <div class="container ">
                <div class="row d-flex justify-content-center align-items-center ">
                    <div class="col-12 col-md-9 col-lg-7 col-xl-6">
                        <div class="card" style="border-radius: 15px;">
                            <div class="card-body p-5">

                                <div id="paypal-button-container"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <input type="hidden" value="{{totalAmount}}" id="total">
        <input type="hidden" value="{{userId}}" id="userId">
        <input type="hidden" value="{{address}}" id="address">
    </section>

    
    <script>
        const amount = document.getElementById('total').value
       
        const userId = document.getElementById('userId').value
        const address = document.getElementById('address').value
        paypal.Buttons({
            // Sets up the transaction when a payment button is clicked
            createOrder: (data, actions) => {
                return actions.order.create({
                    purchase_units: [{
                        amount: {
                            value: Math.round(amount/82) // Can also reference a variable or function
                        }
                    }]
                });
            },
            // Finalize the transaction after payer approval
            onApprove: (data, actions) => {
                return actions.order.capture().then(function (orderData) {
                    $.ajax({
                        async: true,
                        url: '/paypal/place/order',
                        type: 'post',
                        data: { userId: userId, address: address, method: 'paypal' },
                        beforeSend: function (request) {
                            return request.setRequestHeader('X-CSRF-Token', $("meta[name='csrf-token']").attr('content'));
                        },
                        success: function (response) {
                            if (response == 'success') {
                                Swal.fire({
                                    title: 'Success',
                                    text: "Order Placed Successfully !",
                                    icon: 'success',
                                    confirmButtonColor: '#3085d6',
                                    cancelButtonColor: '#d33',
                                    confirmButtonText: 'OK',
                                    timer: 3000
                                }).then(() => {
                                    document.location.href = '/orders'
                                })
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Oops...',
                                    text: 'Please signin to add the item to the cart!',
                                })
                            }
                        }
                    })
                    // Successful capture! For dev/demo purposes:
                    console.log('Capture result', orderData, JSON.stringify(orderData, null, 2));
                    const transaction = orderData.purchase_units[0].payments.captures[0];
                    {{!-- alert(`Transaction ${transaction.status}: ${transaction.id}\n\nSee console for all available details`); --}}
                    // When ready to go live, remove the alert and show a success message within this page. For example:
                    // const element = document.getElementById('paypal-button-container');
                    // element.innerHTML = '<h3>Thank you for your payment!</h3>';
                    // Or go to another URL:  actions.redirect('thank_you.html');

                });
            }
        }).render('#paypal-button-container')
    </script>
</body>

</html>